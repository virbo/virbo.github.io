{"version":3,"sources":["components/helpers/firebase/Config.js","components/pages/chart/index.js","serviceWorker.js","index.js","playstore.png"],"names":["Config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","require","Highcharts","index","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","_getLatest","latest","on","snap","_data","val","setState","isLoading","dataChart","latestchart","chart","dataWilayah","latestwilayah","statistik","labelWilayah","label","progress","version","time","Date","toLocaleString","app","firebase","initializeApp","database","ref","child","state","inherits","createClass","key","value","_this$state","react_default","a","createElement","className","role","aria-label","href","style","marginTop","chart_RenderPie","title","data","proses","total","persen","chart_RenderColumn","series","target","rel","src","Logo","alt","width","Component","RenderPie","map","item","name","y","options","colors","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","subtitle","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","color","theme","contrastTextColor","minPointSize","colorByPoint","highcharts_react_min_default","highcharts","RenderColumn","height","xAxis","categories","crosshair","yAxis","min","headerFormat","shared","useHTML","column","pointPadding","borderWidth","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.38deb301.chunk.js","sourcesContent":["const Config = {\n    apiKey: \"AIzaSyC_Qr6vRYJPnlz_j-SPaDQCX5_NN3m2f7k\",\n    authDomain: \"pilpres2019-46961.firebaseapp.com\",\n    databaseURL: \"https://pilpres2019-46961.firebaseio.com\",\n    projectId: \"pilpres2019-46961\",\n    storageBucket: \"pilpres2019-46961.appspot.com\",\n    messagingSenderId: \"149717606481\"\n}\n\nexport default Config","import React, { Component } from 'react'\n\nimport firebase from 'firebase/app'\nimport 'firebase/database'\n\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nimport {Config} from '../../helpers/firebase'\nimport Logo from '../../../playstore.png'\n\nrequire('highcharts/modules/exporting')(Highcharts)\n\nexport class index extends Component {\n    constructor(props) {\n        super(props)\n\n        this.time = new Date().toLocaleString(\"id\")\n        this.app = firebase.initializeApp(Config)\n        \n        this.latest = this.app.database().ref().child('lateststatistik')\n        \n        this.state = {\n            isLoading: true,\n            //isOpen: false,\n            //latest: [],\n            dataChart: [],\n            dataWilayah: [],\n            labelWilayah: [],\n            //formater: [],\n            version: null,\n            progress: []\n        }\n    }\n\n    componentDidMount = () => {\n        this._getLatest()\n        //this._getStatistik()\n    }\n\n    _getLatest = () => {\n        this.latest.on('value', snap => {\n            let _data = snap.val()\n            this.setState({\n                isLoading: false,\n                dataChart: _data.latestchart.chart,\n                dataWilayah: _data.latestwilayah.statistik,\n                labelWilayah: _data.latestwilayah.label,\n\n                progress: _data.latestchart.progress,\n                version: _data.latestchart.version\n            })\n            //console.log(_data.latestchart.chart)\n        })\n    }\n\n    render() {\n        const {\n            isLoading,\n            dataChart,\n            dataWilayah,\n            labelWilayah,\n            version,\n            progress\n        } = this.state\n\n        //console.log(dataStatistik)\n        return (\n            <div>\n                <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <a className=\"navbar-item\" href=\"/\">\n                            RealCount PILPRES 2019\n                        </a>\n                    </div>\n                </nav>\n                {\n                    isLoading ? \n                    <div className=\"pageloader is-active\"><span className=\"title\">load data</span></div> : \n                    <div className=\"container is-fluid\">\n                        <div className=\"notification is-warning\" style={{marginTop: 20}}>\n                            Disclaimer: Data yang ditampilkan berasal dari file JSON KPU\n                        </div>\n                        <div className=\"card\">\n                            <div className=\"card-content\">\n                                <RenderPie \n                                    title=\"Persentase Perolehan Suara\"\n                                    data={dataChart}\n                                    version={version}\n                                    progress={progress.proses}\n                                    total={progress.total}\n                                    persen={progress.persen}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{marginTop: 20}}>\n                            <div className=\"card-content\">\n                                <RenderColumn \n                                    title=\"Perolehan Suara per Wilayah\"\n                                    label={labelWilayah}\n                                    series={dataWilayah}\n                                    version={version}\n                                    progress={progress.proses}\n                                    total={progress.total}\n                                    persen={progress.persen}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n                <footer className=\"footer\" style={{marginTop: 20}}>\n                    <div className=\"content has-text-centered\">\n                        <p><strong>RealCount PILPRES 2019</strong> by <a href=\"https://dutainformasi.net\">Duta Informasi</a></p>\n                        <p>\n                            Available on<br />\n                            <a href=\"https://play.google.com/store/apps/details?id=com.realcountkpu\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <img src={Logo} alt=\"Logo\" width=\"100\" />\n                            </a>\n                        </p>\n                    </div>\n                </footer>\n            </div>\n        )\n    }\n}\n\nconst RenderPie = (props) => {\n    const {\n        data,\n        title,\n        version,\n        progress,\n        total,\n        persen\n    } = props\n\n    const dataChart = data.map( (item, key) => {\n        return {\n            name: item.name,\n            y: item.value,\n        }\n    })\n\n    const options = {\n        colors: ['#2ecc71', '#e67e22'],\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n        },\n        title: {\n            text: title\n        },\n        subtitle: {\n            text: 'Terakhir diupdate: '+version+' WIB. Progress: '+progress+' dari '+total+' TPS ('+persen+' %)'\n        },\n        tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b>: {point.percentage:.2f} %<br>' + \n                        '<b></b>Perolehan suara</b>: {point.y:,.0f}',\n                    style: {\n                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\n                    }\n                },\n                //showInLegend: true\n            }\n        },\n        series: [{\n            minPointSize: 10,\n            name: 'Persentase Suara',\n            //innerSize: '20%',\n            colorByPoint: true,\n            data: dataChart\n        }]\n    }\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n        />\n    )\n}\n\nconst RenderColumn = (props) => {\n    const {\n        label,\n        series,\n        title,\n        version,\n        progress,\n        total,\n        persen\n    } = props\n\n    const options = {\n        colors: ['#2ecc71', '#e67e22'],\n        chart: {\n            type: 'column',\n            height: 1000\n        },\n        title: {\n            text: title\n        },\n        subtitle: {\n            text: 'Terakhir diupdate: '+version+' WIB. Progress: '+progress+' dari '+total+' TPS ('+persen+' %)'\n        },\n        xAxis: {\n            categories: label,\n            crosshair: true\n        },\n        yAxis: {\n            min: 0,\n            title: {\n                text: 'Jumlah suara'\n            },\n        },\n        tooltip: {\n            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:,.0f} suara</b></td></tr>',\n            //footerFormat: '</table><span>Persetanse suara: <b>{point.percentage:.1f}%</b></span>',\n            shared: true,\n            useHTML: true\n        },\n        plotOptions: {\n            column: {\n                pointPadding: 0.2,\n                borderWidth: 0,\n            }\n        },\n        series: series,\n    }\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n        />\n    )\n}\n\nexport default index\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'bulma-extensions/dist/css/bulma-extensions.min.css';\nimport 'bulma-extensions/dist/js/bulma-extensions.min.js';\n//import App from './App';\n//import App from './components/pages/kpu'\n//import App from './components/pages/firebase/baca'\n//import App from './components/pages/chart/PieChart'\nimport App from './components/pages/chart'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/playstore.e595794c.png\";"],"sourceRoot":""}